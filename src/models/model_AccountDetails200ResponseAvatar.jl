# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""account_details_200_response_avatar

    AccountDetails200ResponseAvatar(;
        gravatar=nothing,
        tmdb=nothing,
    )

    - gravatar::AccountDetails200ResponseAvatarGravatar
    - tmdb::AccountDetails200ResponseAvatarTmdb
"""
Base.@kwdef mutable struct AccountDetails200ResponseAvatar <: OpenAPI.APIModel
    gravatar = nothing # spec type: Union{ Nothing, AccountDetails200ResponseAvatarGravatar }
    tmdb = nothing # spec type: Union{ Nothing, AccountDetails200ResponseAvatarTmdb }

    function AccountDetails200ResponseAvatar(gravatar, tmdb, )
        OpenAPI.validate_property(AccountDetails200ResponseAvatar, Symbol("gravatar"), gravatar)
        OpenAPI.validate_property(AccountDetails200ResponseAvatar, Symbol("tmdb"), tmdb)
        return new(gravatar, tmdb, )
    end
end # type AccountDetails200ResponseAvatar

const _property_types_AccountDetails200ResponseAvatar = Dict{Symbol,String}(Symbol("gravatar")=>"AccountDetails200ResponseAvatarGravatar", Symbol("tmdb")=>"AccountDetails200ResponseAvatarTmdb", )
OpenAPI.property_type(::Type{ AccountDetails200ResponseAvatar }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AccountDetails200ResponseAvatar[name]))}

function check_required(o::AccountDetails200ResponseAvatar)
    true
end

function OpenAPI.validate_property(::Type{ AccountDetails200ResponseAvatar }, name::Symbol, val)
end
