# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""authentication_create_session_from_login_200_response

    AuthenticationCreateSessionFromLogin200Response(;
        success=true,
        expires_at=nothing,
        request_token=nothing,
    )

    - success::Bool
    - expires_at::String
    - request_token::String
"""
Base.@kwdef mutable struct AuthenticationCreateSessionFromLogin200Response <: OpenAPI.APIModel
    success::Union{Nothing, Bool} = true
    expires_at::Union{Nothing, String} = nothing
    request_token::Union{Nothing, String} = nothing

    function AuthenticationCreateSessionFromLogin200Response(success, expires_at, request_token, )
        OpenAPI.validate_property(AuthenticationCreateSessionFromLogin200Response, Symbol("success"), success)
        OpenAPI.validate_property(AuthenticationCreateSessionFromLogin200Response, Symbol("expires_at"), expires_at)
        OpenAPI.validate_property(AuthenticationCreateSessionFromLogin200Response, Symbol("request_token"), request_token)
        return new(success, expires_at, request_token, )
    end
end # type AuthenticationCreateSessionFromLogin200Response

const _property_types_AuthenticationCreateSessionFromLogin200Response = Dict{Symbol,String}(Symbol("success")=>"Bool", Symbol("expires_at")=>"String", Symbol("request_token")=>"String", )
OpenAPI.property_type(::Type{ AuthenticationCreateSessionFromLogin200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AuthenticationCreateSessionFromLogin200Response[name]))}

function check_required(o::AuthenticationCreateSessionFromLogin200Response)
    true
end

function OpenAPI.validate_property(::Type{ AuthenticationCreateSessionFromLogin200Response }, name::Symbol, val)
end
