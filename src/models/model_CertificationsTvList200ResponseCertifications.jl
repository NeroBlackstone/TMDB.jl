# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""certifications_tv_list_200_response_certifications

    CertificationsTvList200ResponseCertifications(;
        AU=nothing,
        BR=nothing,
        CA=nothing,
        var"CA-QC"=nothing,
        DE=nothing,
        ES=nothing,
        FR=nothing,
        GB=nothing,
        HU=nothing,
        KR=nothing,
        LT=nothing,
        NL=nothing,
        PH=nothing,
        PT=nothing,
        RU=nothing,
        SK=nothing,
        TH=nothing,
        US=nothing,
        IT=nothing,
        FI=nothing,
        MY=nothing,
        NZ=nothing,
        NO=nothing,
        BG=nothing,
        MX=nothing,
        IN=nothing,
        DK=nothing,
        SE=nothing,
        ID=nothing,
        TR=nothing,
        AR=nothing,
        PL=nothing,
        MA=nothing,
        GR=nothing,
        IL=nothing,
        TW=nothing,
        ZA=nothing,
        SG=nothing,
        PR=nothing,
        VI=nothing,
    )

    - AU::Vector{CertificationsTvList200ResponseCertificationsAUInner}
    - BR::Vector{CertificationsTvList200ResponseCertificationsBRInner}
    - CA::Vector{CertificationsTvList200ResponseCertificationsCAInner}
    - var"CA-QC"::Vector{CertificationsTvList200ResponseCertificationsCAQCInner}
    - DE::Vector{CertificationsTvList200ResponseCertificationsDEInner}
    - ES::Vector{CertificationMovieList200ResponseCertificationsCAQCInner}
    - FR::Vector{CertificationMovieList200ResponseCertificationsCAQCInner}
    - GB::Vector{CertificationsTvList200ResponseCertificationsGBInner}
    - HU::Vector{CertificationsTvList200ResponseCertificationsHUInner}
    - KR::Vector{CertificationsTvList200ResponseCertificationsKRInner}
    - LT::Vector{CertificationsTvList200ResponseCertificationsLTInner}
    - NL::Vector{CertificationMovieList200ResponseCertificationsCAQCInner}
    - PH::Vector{CertificationMovieList200ResponseCertificationsCAQCInner}
    - PT::Vector{CertificationsTvList200ResponseCertificationsPTInner}
    - RU::Vector{CertificationsTvList200ResponseCertificationsRUInner}
    - SK::Vector{CertificationMovieList200ResponseCertificationsCAQCInner}
    - TH::Vector{CertificationsTvList200ResponseCertificationsTHInner}
    - US::Vector{CertificationsTvList200ResponseCertificationsUSInner}
    - IT::Vector{CertificationsTvList200ResponseCertificationsITInner}
    - FI::Vector{CertificationsTvList200ResponseCertificationsFIInner}
    - MY::Vector{CertificationsTvList200ResponseCertificationsMYInner}
    - NZ::Vector{CertificationsTvList200ResponseCertificationsNZInner}
    - NO::Vector{CertificationsTvList200ResponseCertificationsNOInner}
    - BG::Vector{CertificationsTvList200ResponseCertificationsBGInner}
    - MX::Vector{CertificationsTvList200ResponseCertificationsMXInner}
    - IN::Vector{CertificationsTvList200ResponseCertificationsINInner}
    - DK::Vector{CertificationsTvList200ResponseCertificationsDKInner}
    - SE::Vector{CertificationsTvList200ResponseCertificationsSEInner}
    - ID::Vector{CertificationsTvList200ResponseCertificationsIDInner}
    - TR::Vector{CertificationsTvList200ResponseCertificationsTRInner}
    - AR::Vector{CertificationsTvList200ResponseCertificationsARInner}
    - PL::Vector{CertificationsTvList200ResponseCertificationsPLInner}
    - MA::Vector{CertificationsTvList200ResponseCertificationsMAInner}
    - GR::Vector{CertificationsTvList200ResponseCertificationsGRInner}
    - IL::Vector{CertificationsTvList200ResponseCertificationsILInner}
    - TW::Vector{CertificationsTvList200ResponseCertificationsTWInner}
    - ZA::Vector{CertificationsTvList200ResponseCertificationsZAInner}
    - SG::Vector{CertificationMovieList200ResponseCertificationsPRInner}
    - PR::Vector{CertificationsTvList200ResponseCertificationsPRInner}
    - VI::Vector{CertificationsTvList200ResponseCertificationsPRInner}
"""
Base.@kwdef mutable struct CertificationsTvList200ResponseCertifications <: OpenAPI.APIModel
    AU::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsAUInner} }
    BR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsBRInner} }
    CA::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsCAInner} }
    var"CA-QC"::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsCAQCInner} }
    DE::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsDEInner} }
    ES::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsCAQCInner} }
    FR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsCAQCInner} }
    GB::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsGBInner} }
    HU::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsHUInner} }
    KR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsKRInner} }
    LT::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsLTInner} }
    NL::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsCAQCInner} }
    PH::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsCAQCInner} }
    PT::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsPTInner} }
    RU::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsRUInner} }
    SK::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsCAQCInner} }
    TH::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsTHInner} }
    US::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsUSInner} }
    IT::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsITInner} }
    FI::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsFIInner} }
    MY::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsMYInner} }
    NZ::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsNZInner} }
    NO::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsNOInner} }
    BG::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsBGInner} }
    MX::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsMXInner} }
    IN::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsINInner} }
    DK::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsDKInner} }
    SE::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsSEInner} }
    ID::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsIDInner} }
    TR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsTRInner} }
    AR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsARInner} }
    PL::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsPLInner} }
    MA::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsMAInner} }
    GR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsGRInner} }
    IL::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsILInner} }
    TW::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsTWInner} }
    ZA::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsZAInner} }
    SG::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationMovieList200ResponseCertificationsPRInner} }
    PR::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsPRInner} }
    VI::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CertificationsTvList200ResponseCertificationsPRInner} }

    function CertificationsTvList200ResponseCertifications(AU, BR, CA, var"CA-QC", DE, ES, FR, GB, HU, KR, LT, NL, PH, PT, RU, SK, TH, US, IT, FI, MY, NZ, NO, BG, MX, IN, DK, SE, ID, TR, AR, PL, MA, GR, IL, TW, ZA, SG, PR, VI, )
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("AU"), AU)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("BR"), BR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("CA"), CA)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("CA-QC"), var"CA-QC")
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("DE"), DE)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("ES"), ES)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("FR"), FR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("GB"), GB)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("HU"), HU)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("KR"), KR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("LT"), LT)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("NL"), NL)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("PH"), PH)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("PT"), PT)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("RU"), RU)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("SK"), SK)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("TH"), TH)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("US"), US)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("IT"), IT)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("FI"), FI)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("MY"), MY)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("NZ"), NZ)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("NO"), NO)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("BG"), BG)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("MX"), MX)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("IN"), IN)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("DK"), DK)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("SE"), SE)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("ID"), ID)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("TR"), TR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("AR"), AR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("PL"), PL)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("MA"), MA)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("GR"), GR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("IL"), IL)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("TW"), TW)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("ZA"), ZA)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("SG"), SG)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("PR"), PR)
        OpenAPI.validate_property(CertificationsTvList200ResponseCertifications, Symbol("VI"), VI)
        return new(AU, BR, CA, var"CA-QC", DE, ES, FR, GB, HU, KR, LT, NL, PH, PT, RU, SK, TH, US, IT, FI, MY, NZ, NO, BG, MX, IN, DK, SE, ID, TR, AR, PL, MA, GR, IL, TW, ZA, SG, PR, VI, )
    end
end # type CertificationsTvList200ResponseCertifications

const _property_types_CertificationsTvList200ResponseCertifications = Dict{Symbol,String}(Symbol("AU")=>"Vector{CertificationsTvList200ResponseCertificationsAUInner}", Symbol("BR")=>"Vector{CertificationsTvList200ResponseCertificationsBRInner}", Symbol("CA")=>"Vector{CertificationsTvList200ResponseCertificationsCAInner}", Symbol("CA-QC")=>"Vector{CertificationsTvList200ResponseCertificationsCAQCInner}", Symbol("DE")=>"Vector{CertificationsTvList200ResponseCertificationsDEInner}", Symbol("ES")=>"Vector{CertificationMovieList200ResponseCertificationsCAQCInner}", Symbol("FR")=>"Vector{CertificationMovieList200ResponseCertificationsCAQCInner}", Symbol("GB")=>"Vector{CertificationsTvList200ResponseCertificationsGBInner}", Symbol("HU")=>"Vector{CertificationsTvList200ResponseCertificationsHUInner}", Symbol("KR")=>"Vector{CertificationsTvList200ResponseCertificationsKRInner}", Symbol("LT")=>"Vector{CertificationsTvList200ResponseCertificationsLTInner}", Symbol("NL")=>"Vector{CertificationMovieList200ResponseCertificationsCAQCInner}", Symbol("PH")=>"Vector{CertificationMovieList200ResponseCertificationsCAQCInner}", Symbol("PT")=>"Vector{CertificationsTvList200ResponseCertificationsPTInner}", Symbol("RU")=>"Vector{CertificationsTvList200ResponseCertificationsRUInner}", Symbol("SK")=>"Vector{CertificationMovieList200ResponseCertificationsCAQCInner}", Symbol("TH")=>"Vector{CertificationsTvList200ResponseCertificationsTHInner}", Symbol("US")=>"Vector{CertificationsTvList200ResponseCertificationsUSInner}", Symbol("IT")=>"Vector{CertificationsTvList200ResponseCertificationsITInner}", Symbol("FI")=>"Vector{CertificationsTvList200ResponseCertificationsFIInner}", Symbol("MY")=>"Vector{CertificationsTvList200ResponseCertificationsMYInner}", Symbol("NZ")=>"Vector{CertificationsTvList200ResponseCertificationsNZInner}", Symbol("NO")=>"Vector{CertificationsTvList200ResponseCertificationsNOInner}", Symbol("BG")=>"Vector{CertificationsTvList200ResponseCertificationsBGInner}", Symbol("MX")=>"Vector{CertificationsTvList200ResponseCertificationsMXInner}", Symbol("IN")=>"Vector{CertificationsTvList200ResponseCertificationsINInner}", Symbol("DK")=>"Vector{CertificationsTvList200ResponseCertificationsDKInner}", Symbol("SE")=>"Vector{CertificationsTvList200ResponseCertificationsSEInner}", Symbol("ID")=>"Vector{CertificationsTvList200ResponseCertificationsIDInner}", Symbol("TR")=>"Vector{CertificationsTvList200ResponseCertificationsTRInner}", Symbol("AR")=>"Vector{CertificationsTvList200ResponseCertificationsARInner}", Symbol("PL")=>"Vector{CertificationsTvList200ResponseCertificationsPLInner}", Symbol("MA")=>"Vector{CertificationsTvList200ResponseCertificationsMAInner}", Symbol("GR")=>"Vector{CertificationsTvList200ResponseCertificationsGRInner}", Symbol("IL")=>"Vector{CertificationsTvList200ResponseCertificationsILInner}", Symbol("TW")=>"Vector{CertificationsTvList200ResponseCertificationsTWInner}", Symbol("ZA")=>"Vector{CertificationsTvList200ResponseCertificationsZAInner}", Symbol("SG")=>"Vector{CertificationMovieList200ResponseCertificationsPRInner}", Symbol("PR")=>"Vector{CertificationsTvList200ResponseCertificationsPRInner}", Symbol("VI")=>"Vector{CertificationsTvList200ResponseCertificationsPRInner}", )
OpenAPI.property_type(::Type{ CertificationsTvList200ResponseCertifications }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CertificationsTvList200ResponseCertifications[name]))}

function check_required(o::CertificationsTvList200ResponseCertifications)
    true
end

function OpenAPI.validate_property(::Type{ CertificationsTvList200ResponseCertifications }, name::Symbol, val)
end
