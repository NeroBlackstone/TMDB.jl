# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""collection_details_200_response

    CollectionDetails200Response(;
        id=0,
        name=nothing,
        overview=nothing,
        poster_path=nothing,
        backdrop_path=nothing,
        parts=nothing,
    )

    - id::Int64
    - name::String
    - overview::String
    - poster_path::String
    - backdrop_path::String
    - parts::Vector{CollectionDetails200ResponsePartsInner}
"""
Base.@kwdef mutable struct CollectionDetails200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    name::Union{Nothing, String} = nothing
    overview::Union{Nothing, String} = nothing
    poster_path::Union{Nothing, String} = nothing
    backdrop_path::Union{Nothing, String} = nothing
    parts::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CollectionDetails200ResponsePartsInner} }

    function CollectionDetails200Response(id, name, overview, poster_path, backdrop_path, parts, )
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("id"), id)
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("name"), name)
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("overview"), overview)
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("poster_path"), poster_path)
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("backdrop_path"), backdrop_path)
        OpenAPI.validate_property(CollectionDetails200Response, Symbol("parts"), parts)
        return new(id, name, overview, poster_path, backdrop_path, parts, )
    end
end # type CollectionDetails200Response

const _property_types_CollectionDetails200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("name")=>"String", Symbol("overview")=>"String", Symbol("poster_path")=>"String", Symbol("backdrop_path")=>"String", Symbol("parts")=>"Vector{CollectionDetails200ResponsePartsInner}", )
OpenAPI.property_type(::Type{ CollectionDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CollectionDetails200Response[name]))}

function check_required(o::CollectionDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ CollectionDetails200Response }, name::Symbol, val)
end
