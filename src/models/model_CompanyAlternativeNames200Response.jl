# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""company_alternative_names_200_response

    CompanyAlternativeNames200Response(;
        id=0,
        results=nothing,
    )

    - id::Int64
    - results::Vector{CompanyAlternativeNames200ResponseResultsInner}
"""
Base.@kwdef mutable struct CompanyAlternativeNames200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CompanyAlternativeNames200ResponseResultsInner} }

    function CompanyAlternativeNames200Response(id, results, )
        OpenAPI.validate_property(CompanyAlternativeNames200Response, Symbol("id"), id)
        OpenAPI.validate_property(CompanyAlternativeNames200Response, Symbol("results"), results)
        return new(id, results, )
    end
end # type CompanyAlternativeNames200Response

const _property_types_CompanyAlternativeNames200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("results")=>"Vector{CompanyAlternativeNames200ResponseResultsInner}", )
OpenAPI.property_type(::Type{ CompanyAlternativeNames200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CompanyAlternativeNames200Response[name]))}

function check_required(o::CompanyAlternativeNames200Response)
    true
end

function OpenAPI.validate_property(::Type{ CompanyAlternativeNames200Response }, name::Symbol, val)
end
