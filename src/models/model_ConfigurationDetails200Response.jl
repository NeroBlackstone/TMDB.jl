# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""configuration_details_200_response

    ConfigurationDetails200Response(;
        images=nothing,
        change_keys=nothing,
    )

    - images::ConfigurationDetails200ResponseImages
    - change_keys::Vector{String}
"""
Base.@kwdef mutable struct ConfigurationDetails200Response <: OpenAPI.APIModel
    images = nothing # spec type: Union{ Nothing, ConfigurationDetails200ResponseImages }
    change_keys::Union{Nothing, Vector{String}} = nothing

    function ConfigurationDetails200Response(images, change_keys, )
        OpenAPI.validate_property(ConfigurationDetails200Response, Symbol("images"), images)
        OpenAPI.validate_property(ConfigurationDetails200Response, Symbol("change_keys"), change_keys)
        return new(images, change_keys, )
    end
end # type ConfigurationDetails200Response

const _property_types_ConfigurationDetails200Response = Dict{Symbol,String}(Symbol("images")=>"ConfigurationDetails200ResponseImages", Symbol("change_keys")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ConfigurationDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConfigurationDetails200Response[name]))}

function check_required(o::ConfigurationDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ ConfigurationDetails200Response }, name::Symbol, val)
end
