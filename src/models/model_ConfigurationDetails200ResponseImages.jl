# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""configuration_details_200_response_images

    ConfigurationDetails200ResponseImages(;
        base_url=nothing,
        secure_base_url=nothing,
        backdrop_sizes=nothing,
        logo_sizes=nothing,
        poster_sizes=nothing,
        profile_sizes=nothing,
        still_sizes=nothing,
    )

    - base_url::String
    - secure_base_url::String
    - backdrop_sizes::Vector{String}
    - logo_sizes::Vector{String}
    - poster_sizes::Vector{String}
    - profile_sizes::Vector{String}
    - still_sizes::Vector{String}
"""
Base.@kwdef mutable struct ConfigurationDetails200ResponseImages <: OpenAPI.APIModel
    base_url::Union{Nothing, String} = nothing
    secure_base_url::Union{Nothing, String} = nothing
    backdrop_sizes::Union{Nothing, Vector{String}} = nothing
    logo_sizes::Union{Nothing, Vector{String}} = nothing
    poster_sizes::Union{Nothing, Vector{String}} = nothing
    profile_sizes::Union{Nothing, Vector{String}} = nothing
    still_sizes::Union{Nothing, Vector{String}} = nothing

    function ConfigurationDetails200ResponseImages(base_url, secure_base_url, backdrop_sizes, logo_sizes, poster_sizes, profile_sizes, still_sizes, )
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("base_url"), base_url)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("secure_base_url"), secure_base_url)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("backdrop_sizes"), backdrop_sizes)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("logo_sizes"), logo_sizes)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("poster_sizes"), poster_sizes)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("profile_sizes"), profile_sizes)
        OpenAPI.validate_property(ConfigurationDetails200ResponseImages, Symbol("still_sizes"), still_sizes)
        return new(base_url, secure_base_url, backdrop_sizes, logo_sizes, poster_sizes, profile_sizes, still_sizes, )
    end
end # type ConfigurationDetails200ResponseImages

const _property_types_ConfigurationDetails200ResponseImages = Dict{Symbol,String}(Symbol("base_url")=>"String", Symbol("secure_base_url")=>"String", Symbol("backdrop_sizes")=>"Vector{String}", Symbol("logo_sizes")=>"Vector{String}", Symbol("poster_sizes")=>"Vector{String}", Symbol("profile_sizes")=>"Vector{String}", Symbol("still_sizes")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ConfigurationDetails200ResponseImages }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConfigurationDetails200ResponseImages[name]))}

function check_required(o::ConfigurationDetails200ResponseImages)
    true
end

function OpenAPI.validate_property(::Type{ ConfigurationDetails200ResponseImages }, name::Symbol, val)
end
