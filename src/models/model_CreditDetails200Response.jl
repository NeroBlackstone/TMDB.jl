# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""credit_details_200_response

    CreditDetails200Response(;
        credit_type=nothing,
        department=nothing,
        job=nothing,
        media=nothing,
        media_type=nothing,
        id=nothing,
        person=nothing,
    )

    - credit_type::String
    - department::String
    - job::String
    - media::CreditDetails200ResponseMedia
    - media_type::String
    - id::String
    - person::CreditDetails200ResponsePerson
"""
Base.@kwdef mutable struct CreditDetails200Response <: OpenAPI.APIModel
    credit_type::Union{Nothing, String} = nothing
    department::Union{Nothing, String} = nothing
    job::Union{Nothing, String} = nothing
    media = nothing # spec type: Union{ Nothing, CreditDetails200ResponseMedia }
    media_type::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    person = nothing # spec type: Union{ Nothing, CreditDetails200ResponsePerson }

    function CreditDetails200Response(credit_type, department, job, media, media_type, id, person, )
        OpenAPI.validate_property(CreditDetails200Response, Symbol("credit_type"), credit_type)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("department"), department)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("job"), job)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("media"), media)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("media_type"), media_type)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("id"), id)
        OpenAPI.validate_property(CreditDetails200Response, Symbol("person"), person)
        return new(credit_type, department, job, media, media_type, id, person, )
    end
end # type CreditDetails200Response

const _property_types_CreditDetails200Response = Dict{Symbol,String}(Symbol("credit_type")=>"String", Symbol("department")=>"String", Symbol("job")=>"String", Symbol("media")=>"CreditDetails200ResponseMedia", Symbol("media_type")=>"String", Symbol("id")=>"String", Symbol("person")=>"CreditDetails200ResponsePerson", )
OpenAPI.property_type(::Type{ CreditDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreditDetails200Response[name]))}

function check_required(o::CreditDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ CreditDetails200Response }, name::Symbol, val)
end
