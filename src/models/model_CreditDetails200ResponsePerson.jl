# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""credit_details_200_response_person

    CreditDetails200ResponsePerson(;
        adult=true,
        id=0,
        name=nothing,
        original_name=nothing,
        media_type=nothing,
        popularity=0,
        gender=0,
        known_for_department=nothing,
        profile_path=nothing,
    )

    - adult::Bool
    - id::Int64
    - name::String
    - original_name::String
    - media_type::String
    - popularity::Float64
    - gender::Int64
    - known_for_department::String
    - profile_path::String
"""
Base.@kwdef mutable struct CreditDetails200ResponsePerson <: OpenAPI.APIModel
    adult::Union{Nothing, Bool} = true
    id::Union{Nothing, Int64} = 0
    name::Union{Nothing, String} = nothing
    original_name::Union{Nothing, String} = nothing
    media_type::Union{Nothing, String} = nothing
    popularity::Union{Nothing, Float64} = 0
    gender::Union{Nothing, Int64} = 0
    known_for_department::Union{Nothing, String} = nothing
    profile_path::Union{Nothing, String} = nothing

    function CreditDetails200ResponsePerson(adult, id, name, original_name, media_type, popularity, gender, known_for_department, profile_path, )
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("adult"), adult)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("id"), id)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("name"), name)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("original_name"), original_name)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("media_type"), media_type)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("popularity"), popularity)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("gender"), gender)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("known_for_department"), known_for_department)
        OpenAPI.validate_property(CreditDetails200ResponsePerson, Symbol("profile_path"), profile_path)
        return new(adult, id, name, original_name, media_type, popularity, gender, known_for_department, profile_path, )
    end
end # type CreditDetails200ResponsePerson

const _property_types_CreditDetails200ResponsePerson = Dict{Symbol,String}(Symbol("adult")=>"Bool", Symbol("id")=>"Int64", Symbol("name")=>"String", Symbol("original_name")=>"String", Symbol("media_type")=>"String", Symbol("popularity")=>"Float64", Symbol("gender")=>"Int64", Symbol("known_for_department")=>"String", Symbol("profile_path")=>"String", )
OpenAPI.property_type(::Type{ CreditDetails200ResponsePerson }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreditDetails200ResponsePerson[name]))}

function check_required(o::CreditDetails200ResponsePerson)
    true
end

function OpenAPI.validate_property(::Type{ CreditDetails200ResponsePerson }, name::Symbol, val)
end
