# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""list_details_200_response

    ListDetails200Response(;
        created_by=nothing,
        description=nothing,
        favorite_count=0,
        id=nothing,
        items=nothing,
        item_count=0,
        iso_639_1=nothing,
        name=nothing,
        poster_path=nothing,
    )

    - created_by::String
    - description::String
    - favorite_count::Int64
    - id::String
    - items::Vector{ListDetails200ResponseItemsInner}
    - item_count::Int64
    - iso_639_1::String
    - name::String
    - poster_path::String
"""
Base.@kwdef mutable struct ListDetails200Response <: OpenAPI.APIModel
    created_by::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    favorite_count::Union{Nothing, Int64} = 0
    id::Union{Nothing, String} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ListDetails200ResponseItemsInner} }
    item_count::Union{Nothing, Int64} = 0
    iso_639_1::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    poster_path::Union{Nothing, String} = nothing

    function ListDetails200Response(created_by, description, favorite_count, id, items, item_count, iso_639_1, name, poster_path, )
        OpenAPI.validate_property(ListDetails200Response, Symbol("created_by"), created_by)
        OpenAPI.validate_property(ListDetails200Response, Symbol("description"), description)
        OpenAPI.validate_property(ListDetails200Response, Symbol("favorite_count"), favorite_count)
        OpenAPI.validate_property(ListDetails200Response, Symbol("id"), id)
        OpenAPI.validate_property(ListDetails200Response, Symbol("items"), items)
        OpenAPI.validate_property(ListDetails200Response, Symbol("item_count"), item_count)
        OpenAPI.validate_property(ListDetails200Response, Symbol("iso_639_1"), iso_639_1)
        OpenAPI.validate_property(ListDetails200Response, Symbol("name"), name)
        OpenAPI.validate_property(ListDetails200Response, Symbol("poster_path"), poster_path)
        return new(created_by, description, favorite_count, id, items, item_count, iso_639_1, name, poster_path, )
    end
end # type ListDetails200Response

const _property_types_ListDetails200Response = Dict{Symbol,String}(Symbol("created_by")=>"String", Symbol("description")=>"String", Symbol("favorite_count")=>"Int64", Symbol("id")=>"String", Symbol("items")=>"Vector{ListDetails200ResponseItemsInner}", Symbol("item_count")=>"Int64", Symbol("iso_639_1")=>"String", Symbol("name")=>"String", Symbol("poster_path")=>"String", )
OpenAPI.property_type(::Type{ ListDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListDetails200Response[name]))}

function check_required(o::ListDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ ListDetails200Response }, name::Symbol, val)
end
