# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_account_states_200_response

    MovieAccountStates200Response(;
        id=0,
        favorite=true,
        rated=nothing,
        watchlist=true,
    )

    - id::Int64
    - favorite::Bool
    - rated::MovieAccountStates200ResponseRated
    - watchlist::Bool
"""
Base.@kwdef mutable struct MovieAccountStates200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    favorite::Union{Nothing, Bool} = true
    rated = nothing # spec type: Union{ Nothing, MovieAccountStates200ResponseRated }
    watchlist::Union{Nothing, Bool} = true

    function MovieAccountStates200Response(id, favorite, rated, watchlist, )
        OpenAPI.validate_property(MovieAccountStates200Response, Symbol("id"), id)
        OpenAPI.validate_property(MovieAccountStates200Response, Symbol("favorite"), favorite)
        OpenAPI.validate_property(MovieAccountStates200Response, Symbol("rated"), rated)
        OpenAPI.validate_property(MovieAccountStates200Response, Symbol("watchlist"), watchlist)
        return new(id, favorite, rated, watchlist, )
    end
end # type MovieAccountStates200Response

const _property_types_MovieAccountStates200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("favorite")=>"Bool", Symbol("rated")=>"MovieAccountStates200ResponseRated", Symbol("watchlist")=>"Bool", )
OpenAPI.property_type(::Type{ MovieAccountStates200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieAccountStates200Response[name]))}

function check_required(o::MovieAccountStates200Response)
    true
end

function OpenAPI.validate_property(::Type{ MovieAccountStates200Response }, name::Symbol, val)
end
