# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_alternative_titles_200_response

    MovieAlternativeTitles200Response(;
        id=0,
        titles=nothing,
    )

    - id::Int64
    - titles::Vector{MovieAlternativeTitles200ResponseTitlesInner}
"""
Base.@kwdef mutable struct MovieAlternativeTitles200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    titles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieAlternativeTitles200ResponseTitlesInner} }

    function MovieAlternativeTitles200Response(id, titles, )
        OpenAPI.validate_property(MovieAlternativeTitles200Response, Symbol("id"), id)
        OpenAPI.validate_property(MovieAlternativeTitles200Response, Symbol("titles"), titles)
        return new(id, titles, )
    end
end # type MovieAlternativeTitles200Response

const _property_types_MovieAlternativeTitles200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("titles")=>"Vector{MovieAlternativeTitles200ResponseTitlesInner}", )
OpenAPI.property_type(::Type{ MovieAlternativeTitles200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieAlternativeTitles200Response[name]))}

function check_required(o::MovieAlternativeTitles200Response)
    true
end

function OpenAPI.validate_property(::Type{ MovieAlternativeTitles200Response }, name::Symbol, val)
end
