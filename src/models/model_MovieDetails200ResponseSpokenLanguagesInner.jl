# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_details_200_response_spoken_languages_inner

    MovieDetails200ResponseSpokenLanguagesInner(;
        english_name=nothing,
        iso_639_1=nothing,
        name=nothing,
    )

    - english_name::String
    - iso_639_1::String
    - name::String
"""
Base.@kwdef mutable struct MovieDetails200ResponseSpokenLanguagesInner <: OpenAPI.APIModel
    english_name::Union{Nothing, String} = nothing
    iso_639_1::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function MovieDetails200ResponseSpokenLanguagesInner(english_name, iso_639_1, name, )
        OpenAPI.validate_property(MovieDetails200ResponseSpokenLanguagesInner, Symbol("english_name"), english_name)
        OpenAPI.validate_property(MovieDetails200ResponseSpokenLanguagesInner, Symbol("iso_639_1"), iso_639_1)
        OpenAPI.validate_property(MovieDetails200ResponseSpokenLanguagesInner, Symbol("name"), name)
        return new(english_name, iso_639_1, name, )
    end
end # type MovieDetails200ResponseSpokenLanguagesInner

const _property_types_MovieDetails200ResponseSpokenLanguagesInner = Dict{Symbol,String}(Symbol("english_name")=>"String", Symbol("iso_639_1")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ MovieDetails200ResponseSpokenLanguagesInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieDetails200ResponseSpokenLanguagesInner[name]))}

function check_required(o::MovieDetails200ResponseSpokenLanguagesInner)
    true
end

function OpenAPI.validate_property(::Type{ MovieDetails200ResponseSpokenLanguagesInner }, name::Symbol, val)
end
