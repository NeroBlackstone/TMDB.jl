# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_keywords_200_response

    MovieKeywords200Response(;
        id=0,
        keywords=nothing,
    )

    - id::Int64
    - keywords::Vector{MovieKeywords200ResponseKeywordsInner}
"""
Base.@kwdef mutable struct MovieKeywords200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    keywords::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieKeywords200ResponseKeywordsInner} }

    function MovieKeywords200Response(id, keywords, )
        OpenAPI.validate_property(MovieKeywords200Response, Symbol("id"), id)
        OpenAPI.validate_property(MovieKeywords200Response, Symbol("keywords"), keywords)
        return new(id, keywords, )
    end
end # type MovieKeywords200Response

const _property_types_MovieKeywords200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("keywords")=>"Vector{MovieKeywords200ResponseKeywordsInner}", )
OpenAPI.property_type(::Type{ MovieKeywords200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieKeywords200Response[name]))}

function check_required(o::MovieKeywords200Response)
    true
end

function OpenAPI.validate_property(::Type{ MovieKeywords200Response }, name::Symbol, val)
end
