# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_latest_id_200_response

    MovieLatestId200Response(;
        adult=true,
        backdrop_path=nothing,
        belongs_to_collection=nothing,
        budget=0,
        genres=nothing,
        homepage=nothing,
        id=0,
        imdb_id=nothing,
        original_language=nothing,
        original_title=nothing,
        overview=nothing,
        popularity=0,
        poster_path=nothing,
        production_companies=nothing,
        production_countries=nothing,
        release_date=nothing,
        revenue=0,
        runtime=0,
        spoken_languages=nothing,
        status=nothing,
        tagline=nothing,
        title=nothing,
        video=true,
        vote_average=0,
        vote_count=0,
    )

    - adult::Bool
    - backdrop_path::Any
    - belongs_to_collection::Any
    - budget::Int64
    - genres::Vector{String}
    - homepage::String
    - id::Int64
    - imdb_id::Any
    - original_language::String
    - original_title::String
    - overview::String
    - popularity::Int64
    - poster_path::Any
    - production_companies::Vector{String}
    - production_countries::Vector{String}
    - release_date::String
    - revenue::Int64
    - runtime::Int64
    - spoken_languages::Vector{String}
    - status::String
    - tagline::String
    - title::String
    - video::Bool
    - vote_average::Int64
    - vote_count::Int64
"""
Base.@kwdef mutable struct MovieLatestId200Response <: OpenAPI.APIModel
    adult::Union{Nothing, Bool} = true
    backdrop_path::Union{Nothing, Any} = nothing
    belongs_to_collection::Union{Nothing, Any} = nothing
    budget::Union{Nothing, Int64} = 0
    genres::Union{Nothing, Vector{String}} = nothing
    homepage::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = 0
    imdb_id::Union{Nothing, Any} = nothing
    original_language::Union{Nothing, String} = nothing
    original_title::Union{Nothing, String} = nothing
    overview::Union{Nothing, String} = nothing
    popularity::Union{Nothing, Int64} = 0
    poster_path::Union{Nothing, Any} = nothing
    production_companies::Union{Nothing, Vector{String}} = nothing
    production_countries::Union{Nothing, Vector{String}} = nothing
    release_date::Union{Nothing, String} = nothing
    revenue::Union{Nothing, Int64} = 0
    runtime::Union{Nothing, Int64} = 0
    spoken_languages::Union{Nothing, Vector{String}} = nothing
    status::Union{Nothing, String} = nothing
    tagline::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    video::Union{Nothing, Bool} = true
    vote_average::Union{Nothing, Int64} = 0
    vote_count::Union{Nothing, Int64} = 0

    function MovieLatestId200Response(adult, backdrop_path, belongs_to_collection, budget, genres, homepage, id, imdb_id, original_language, original_title, overview, popularity, poster_path, production_companies, production_countries, release_date, revenue, runtime, spoken_languages, status, tagline, title, video, vote_average, vote_count, )
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("adult"), adult)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("backdrop_path"), backdrop_path)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("belongs_to_collection"), belongs_to_collection)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("budget"), budget)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("genres"), genres)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("homepage"), homepage)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("id"), id)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("imdb_id"), imdb_id)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("original_language"), original_language)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("original_title"), original_title)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("overview"), overview)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("popularity"), popularity)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("poster_path"), poster_path)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("production_companies"), production_companies)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("production_countries"), production_countries)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("release_date"), release_date)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("revenue"), revenue)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("runtime"), runtime)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("spoken_languages"), spoken_languages)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("status"), status)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("tagline"), tagline)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("title"), title)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("video"), video)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("vote_average"), vote_average)
        OpenAPI.validate_property(MovieLatestId200Response, Symbol("vote_count"), vote_count)
        return new(adult, backdrop_path, belongs_to_collection, budget, genres, homepage, id, imdb_id, original_language, original_title, overview, popularity, poster_path, production_companies, production_countries, release_date, revenue, runtime, spoken_languages, status, tagline, title, video, vote_average, vote_count, )
    end
end # type MovieLatestId200Response

const _property_types_MovieLatestId200Response = Dict{Symbol,String}(Symbol("adult")=>"Bool", Symbol("backdrop_path")=>"Any", Symbol("belongs_to_collection")=>"Any", Symbol("budget")=>"Int64", Symbol("genres")=>"Vector{String}", Symbol("homepage")=>"String", Symbol("id")=>"Int64", Symbol("imdb_id")=>"Any", Symbol("original_language")=>"String", Symbol("original_title")=>"String", Symbol("overview")=>"String", Symbol("popularity")=>"Int64", Symbol("poster_path")=>"Any", Symbol("production_companies")=>"Vector{String}", Symbol("production_countries")=>"Vector{String}", Symbol("release_date")=>"String", Symbol("revenue")=>"Int64", Symbol("runtime")=>"Int64", Symbol("spoken_languages")=>"Vector{String}", Symbol("status")=>"String", Symbol("tagline")=>"String", Symbol("title")=>"String", Symbol("video")=>"Bool", Symbol("vote_average")=>"Int64", Symbol("vote_count")=>"Int64", )
OpenAPI.property_type(::Type{ MovieLatestId200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieLatestId200Response[name]))}

function check_required(o::MovieLatestId200Response)
    true
end

function OpenAPI.validate_property(::Type{ MovieLatestId200Response }, name::Symbol, val)
end
