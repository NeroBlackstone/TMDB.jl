# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_lists_200_response_results_inner

    MovieLists200ResponseResultsInner(;
        description=nothing,
        favorite_count=0,
        id=0,
        item_count=0,
        iso_639_1=nothing,
        list_type=nothing,
        name=nothing,
        poster_path=nothing,
    )

    - description::String
    - favorite_count::Int64
    - id::Int64
    - item_count::Int64
    - iso_639_1::String
    - list_type::String
    - name::String
    - poster_path::Any
"""
Base.@kwdef mutable struct MovieLists200ResponseResultsInner <: OpenAPI.APIModel
    description::Union{Nothing, String} = nothing
    favorite_count::Union{Nothing, Int64} = 0
    id::Union{Nothing, Int64} = 0
    item_count::Union{Nothing, Int64} = 0
    iso_639_1::Union{Nothing, String} = nothing
    list_type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    poster_path::Union{Nothing, Any} = nothing

    function MovieLists200ResponseResultsInner(description, favorite_count, id, item_count, iso_639_1, list_type, name, poster_path, )
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("description"), description)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("favorite_count"), favorite_count)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("id"), id)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("item_count"), item_count)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("iso_639_1"), iso_639_1)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("list_type"), list_type)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("name"), name)
        OpenAPI.validate_property(MovieLists200ResponseResultsInner, Symbol("poster_path"), poster_path)
        return new(description, favorite_count, id, item_count, iso_639_1, list_type, name, poster_path, )
    end
end # type MovieLists200ResponseResultsInner

const _property_types_MovieLists200ResponseResultsInner = Dict{Symbol,String}(Symbol("description")=>"String", Symbol("favorite_count")=>"Int64", Symbol("id")=>"Int64", Symbol("item_count")=>"Int64", Symbol("iso_639_1")=>"String", Symbol("list_type")=>"String", Symbol("name")=>"String", Symbol("poster_path")=>"Any", )
OpenAPI.property_type(::Type{ MovieLists200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieLists200ResponseResultsInner[name]))}

function check_required(o::MovieLists200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ MovieLists200ResponseResultsInner }, name::Symbol, val)
end
