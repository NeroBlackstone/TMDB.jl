# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_reviews_200_response_results_inner

    MovieReviews200ResponseResultsInner(;
        author=nothing,
        author_details=nothing,
        content=nothing,
        created_at=nothing,
        id=nothing,
        updated_at=nothing,
        url=nothing,
    )

    - author::String
    - author_details::MovieReviews200ResponseResultsInnerAuthorDetails
    - content::String
    - created_at::String
    - id::String
    - updated_at::String
    - url::String
"""
Base.@kwdef mutable struct MovieReviews200ResponseResultsInner <: OpenAPI.APIModel
    author::Union{Nothing, String} = nothing
    author_details = nothing # spec type: Union{ Nothing, MovieReviews200ResponseResultsInnerAuthorDetails }
    content::Union{Nothing, String} = nothing
    created_at::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    updated_at::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing

    function MovieReviews200ResponseResultsInner(author, author_details, content, created_at, id, updated_at, url, )
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("author"), author)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("author_details"), author_details)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("content"), content)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("created_at"), created_at)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("id"), id)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("updated_at"), updated_at)
        OpenAPI.validate_property(MovieReviews200ResponseResultsInner, Symbol("url"), url)
        return new(author, author_details, content, created_at, id, updated_at, url, )
    end
end # type MovieReviews200ResponseResultsInner

const _property_types_MovieReviews200ResponseResultsInner = Dict{Symbol,String}(Symbol("author")=>"String", Symbol("author_details")=>"MovieReviews200ResponseResultsInnerAuthorDetails", Symbol("content")=>"String", Symbol("created_at")=>"String", Symbol("id")=>"String", Symbol("updated_at")=>"String", Symbol("url")=>"String", )
OpenAPI.property_type(::Type{ MovieReviews200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieReviews200ResponseResultsInner[name]))}

function check_required(o::MovieReviews200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ MovieReviews200ResponseResultsInner }, name::Symbol, val)
end
