# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_watch_providers_200_response_results_AL

    MovieWatchProviders200ResponseResultsAL(;
        link=nothing,
        buy=nothing,
    )

    - link::String
    - buy::Vector{MovieWatchProviders200ResponseResultsALBuyInner}
"""
Base.@kwdef mutable struct MovieWatchProviders200ResponseResultsAL <: OpenAPI.APIModel
    link::Union{Nothing, String} = nothing
    buy::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsALBuyInner} }

    function MovieWatchProviders200ResponseResultsAL(link, buy, )
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsAL, Symbol("link"), link)
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsAL, Symbol("buy"), buy)
        return new(link, buy, )
    end
end # type MovieWatchProviders200ResponseResultsAL

const _property_types_MovieWatchProviders200ResponseResultsAL = Dict{Symbol,String}(Symbol("link")=>"String", Symbol("buy")=>"Vector{MovieWatchProviders200ResponseResultsALBuyInner}", )
OpenAPI.property_type(::Type{ MovieWatchProviders200ResponseResultsAL }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieWatchProviders200ResponseResultsAL[name]))}

function check_required(o::MovieWatchProviders200ResponseResultsAL)
    true
end

function OpenAPI.validate_property(::Type{ MovieWatchProviders200ResponseResultsAL }, name::Symbol, val)
end
