# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_watch_providers_200_response_results_PL

    MovieWatchProviders200ResponseResultsPL(;
        link=nothing,
        buy=nothing,
        flatrate=nothing,
        rent=nothing,
    )

    - link::String
    - buy::Vector{MovieWatchProviders200ResponseResultsAERentInner}
    - flatrate::Vector{MovieWatchProviders200ResponseResultsPLFlatrateInner}
    - rent::Vector{MovieWatchProviders200ResponseResultsAERentInner}
"""
Base.@kwdef mutable struct MovieWatchProviders200ResponseResultsPL <: OpenAPI.APIModel
    link::Union{Nothing, String} = nothing
    buy::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsAERentInner} }
    flatrate::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsPLFlatrateInner} }
    rent::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsAERentInner} }

    function MovieWatchProviders200ResponseResultsPL(link, buy, flatrate, rent, )
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsPL, Symbol("link"), link)
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsPL, Symbol("buy"), buy)
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsPL, Symbol("flatrate"), flatrate)
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsPL, Symbol("rent"), rent)
        return new(link, buy, flatrate, rent, )
    end
end # type MovieWatchProviders200ResponseResultsPL

const _property_types_MovieWatchProviders200ResponseResultsPL = Dict{Symbol,String}(Symbol("link")=>"String", Symbol("buy")=>"Vector{MovieWatchProviders200ResponseResultsAERentInner}", Symbol("flatrate")=>"Vector{MovieWatchProviders200ResponseResultsPLFlatrateInner}", Symbol("rent")=>"Vector{MovieWatchProviders200ResponseResultsAERentInner}", )
OpenAPI.property_type(::Type{ MovieWatchProviders200ResponseResultsPL }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieWatchProviders200ResponseResultsPL[name]))}

function check_required(o::MovieWatchProviders200ResponseResultsPL)
    true
end

function OpenAPI.validate_property(::Type{ MovieWatchProviders200ResponseResultsPL }, name::Symbol, val)
end
