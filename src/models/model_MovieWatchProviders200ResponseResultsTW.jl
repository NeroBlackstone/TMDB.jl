# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""movie_watch_providers_200_response_results_TW

    MovieWatchProviders200ResponseResultsTW(;
        link=nothing,
        flatrate=nothing,
    )

    - link::String
    - flatrate::Vector{MovieWatchProviders200ResponseResultsAUFlatrateInner}
"""
Base.@kwdef mutable struct MovieWatchProviders200ResponseResultsTW <: OpenAPI.APIModel
    link::Union{Nothing, String} = nothing
    flatrate::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsAUFlatrateInner} }

    function MovieWatchProviders200ResponseResultsTW(link, flatrate, )
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsTW, Symbol("link"), link)
        OpenAPI.validate_property(MovieWatchProviders200ResponseResultsTW, Symbol("flatrate"), flatrate)
        return new(link, flatrate, )
    end
end # type MovieWatchProviders200ResponseResultsTW

const _property_types_MovieWatchProviders200ResponseResultsTW = Dict{Symbol,String}(Symbol("link")=>"String", Symbol("flatrate")=>"Vector{MovieWatchProviders200ResponseResultsAUFlatrateInner}", )
OpenAPI.property_type(::Type{ MovieWatchProviders200ResponseResultsTW }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MovieWatchProviders200ResponseResultsTW[name]))}

function check_required(o::MovieWatchProviders200ResponseResultsTW)
    true
end

function OpenAPI.validate_property(::Type{ MovieWatchProviders200ResponseResultsTW }, name::Symbol, val)
end
