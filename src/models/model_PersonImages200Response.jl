# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""person_images_200_response

    PersonImages200Response(;
        id=0,
        profiles=nothing,
    )

    - id::Int64
    - profiles::Vector{PersonImages200ResponseProfilesInner}
"""
Base.@kwdef mutable struct PersonImages200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    profiles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{PersonImages200ResponseProfilesInner} }

    function PersonImages200Response(id, profiles, )
        OpenAPI.validate_property(PersonImages200Response, Symbol("id"), id)
        OpenAPI.validate_property(PersonImages200Response, Symbol("profiles"), profiles)
        return new(id, profiles, )
    end
end # type PersonImages200Response

const _property_types_PersonImages200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("profiles")=>"Vector{PersonImages200ResponseProfilesInner}", )
OpenAPI.property_type(::Type{ PersonImages200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PersonImages200Response[name]))}

function check_required(o::PersonImages200Response)
    true
end

function OpenAPI.validate_property(::Type{ PersonImages200Response }, name::Symbol, val)
end
