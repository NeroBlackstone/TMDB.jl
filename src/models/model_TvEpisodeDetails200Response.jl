# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_episode_details_200_response

    TvEpisodeDetails200Response(;
        air_date=nothing,
        crew=nothing,
        episode_number=0,
        guest_stars=nothing,
        name=nothing,
        overview=nothing,
        id=0,
        production_code=nothing,
        runtime=0,
        season_number=0,
        still_path=nothing,
        vote_average=0,
        vote_count=0,
    )

    - air_date::String
    - crew::Vector{TvEpisodeDetails200ResponseCrewInner}
    - episode_number::Int64
    - guest_stars::Vector{TvEpisodeDetails200ResponseGuestStarsInner}
    - name::String
    - overview::String
    - id::Int64
    - production_code::String
    - runtime::Int64
    - season_number::Int64
    - still_path::String
    - vote_average::Float64
    - vote_count::Int64
"""
Base.@kwdef mutable struct TvEpisodeDetails200Response <: OpenAPI.APIModel
    air_date::Union{Nothing, String} = nothing
    crew::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvEpisodeDetails200ResponseCrewInner} }
    episode_number::Union{Nothing, Int64} = 0
    guest_stars::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvEpisodeDetails200ResponseGuestStarsInner} }
    name::Union{Nothing, String} = nothing
    overview::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = 0
    production_code::Union{Nothing, String} = nothing
    runtime::Union{Nothing, Int64} = 0
    season_number::Union{Nothing, Int64} = 0
    still_path::Union{Nothing, String} = nothing
    vote_average::Union{Nothing, Float64} = 0
    vote_count::Union{Nothing, Int64} = 0

    function TvEpisodeDetails200Response(air_date, crew, episode_number, guest_stars, name, overview, id, production_code, runtime, season_number, still_path, vote_average, vote_count, )
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("air_date"), air_date)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("crew"), crew)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("episode_number"), episode_number)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("guest_stars"), guest_stars)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("name"), name)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("overview"), overview)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("id"), id)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("production_code"), production_code)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("runtime"), runtime)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("season_number"), season_number)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("still_path"), still_path)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("vote_average"), vote_average)
        OpenAPI.validate_property(TvEpisodeDetails200Response, Symbol("vote_count"), vote_count)
        return new(air_date, crew, episode_number, guest_stars, name, overview, id, production_code, runtime, season_number, still_path, vote_average, vote_count, )
    end
end # type TvEpisodeDetails200Response

const _property_types_TvEpisodeDetails200Response = Dict{Symbol,String}(Symbol("air_date")=>"String", Symbol("crew")=>"Vector{TvEpisodeDetails200ResponseCrewInner}", Symbol("episode_number")=>"Int64", Symbol("guest_stars")=>"Vector{TvEpisodeDetails200ResponseGuestStarsInner}", Symbol("name")=>"String", Symbol("overview")=>"String", Symbol("id")=>"Int64", Symbol("production_code")=>"String", Symbol("runtime")=>"Int64", Symbol("season_number")=>"Int64", Symbol("still_path")=>"String", Symbol("vote_average")=>"Float64", Symbol("vote_count")=>"Int64", )
OpenAPI.property_type(::Type{ TvEpisodeDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvEpisodeDetails200Response[name]))}

function check_required(o::TvEpisodeDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ TvEpisodeDetails200Response }, name::Symbol, val)
end
