# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_season_account_states_200_response_results_inner

    TvSeasonAccountStates200ResponseResultsInner(;
        id=0,
        episode_number=0,
        rated=nothing,
    )

    - id::Int64
    - episode_number::Int64
    - rated::MovieAccountStates200ResponseRated
"""
Base.@kwdef mutable struct TvSeasonAccountStates200ResponseResultsInner <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    episode_number::Union{Nothing, Int64} = 0
    rated = nothing # spec type: Union{ Nothing, MovieAccountStates200ResponseRated }

    function TvSeasonAccountStates200ResponseResultsInner(id, episode_number, rated, )
        OpenAPI.validate_property(TvSeasonAccountStates200ResponseResultsInner, Symbol("id"), id)
        OpenAPI.validate_property(TvSeasonAccountStates200ResponseResultsInner, Symbol("episode_number"), episode_number)
        OpenAPI.validate_property(TvSeasonAccountStates200ResponseResultsInner, Symbol("rated"), rated)
        return new(id, episode_number, rated, )
    end
end # type TvSeasonAccountStates200ResponseResultsInner

const _property_types_TvSeasonAccountStates200ResponseResultsInner = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("episode_number")=>"Int64", Symbol("rated")=>"MovieAccountStates200ResponseRated", )
OpenAPI.property_type(::Type{ TvSeasonAccountStates200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeasonAccountStates200ResponseResultsInner[name]))}

function check_required(o::TvSeasonAccountStates200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeasonAccountStates200ResponseResultsInner }, name::Symbol, val)
end
