# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_season_aggregate_credits_200_response_crew_inner_jobs_inner

    TvSeasonAggregateCredits200ResponseCrewInnerJobsInner(;
        credit_id=nothing,
        job=nothing,
        episode_count=0,
    )

    - credit_id::String
    - job::String
    - episode_count::Int64
"""
Base.@kwdef mutable struct TvSeasonAggregateCredits200ResponseCrewInnerJobsInner <: OpenAPI.APIModel
    credit_id::Union{Nothing, String} = nothing
    job::Union{Nothing, String} = nothing
    episode_count::Union{Nothing, Int64} = 0

    function TvSeasonAggregateCredits200ResponseCrewInnerJobsInner(credit_id, job, episode_count, )
        OpenAPI.validate_property(TvSeasonAggregateCredits200ResponseCrewInnerJobsInner, Symbol("credit_id"), credit_id)
        OpenAPI.validate_property(TvSeasonAggregateCredits200ResponseCrewInnerJobsInner, Symbol("job"), job)
        OpenAPI.validate_property(TvSeasonAggregateCredits200ResponseCrewInnerJobsInner, Symbol("episode_count"), episode_count)
        return new(credit_id, job, episode_count, )
    end
end # type TvSeasonAggregateCredits200ResponseCrewInnerJobsInner

const _property_types_TvSeasonAggregateCredits200ResponseCrewInnerJobsInner = Dict{Symbol,String}(Symbol("credit_id")=>"String", Symbol("job")=>"String", Symbol("episode_count")=>"Int64", )
OpenAPI.property_type(::Type{ TvSeasonAggregateCredits200ResponseCrewInnerJobsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeasonAggregateCredits200ResponseCrewInnerJobsInner[name]))}

function check_required(o::TvSeasonAggregateCredits200ResponseCrewInnerJobsInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeasonAggregateCredits200ResponseCrewInnerJobsInner }, name::Symbol, val)
end
