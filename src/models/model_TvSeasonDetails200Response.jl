# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_season_details_200_response

    TvSeasonDetails200Response(;
        _id=nothing,
        air_date=nothing,
        episodes=nothing,
        name=nothing,
        overview=nothing,
        id=0,
        poster_path=nothing,
        season_number=0,
        vote_average=0,
    )

    - _id::String
    - air_date::String
    - episodes::Vector{TvSeasonDetails200ResponseEpisodesInner}
    - name::String
    - overview::String
    - id::Int64
    - poster_path::String
    - season_number::Int64
    - vote_average::Float64
"""
Base.@kwdef mutable struct TvSeasonDetails200Response <: OpenAPI.APIModel
    _id::Union{Nothing, String} = nothing
    air_date::Union{Nothing, String} = nothing
    episodes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeasonDetails200ResponseEpisodesInner} }
    name::Union{Nothing, String} = nothing
    overview::Union{Nothing, String} = nothing
    id::Union{Nothing, Int64} = 0
    poster_path::Union{Nothing, String} = nothing
    season_number::Union{Nothing, Int64} = 0
    vote_average::Union{Nothing, Float64} = 0

    function TvSeasonDetails200Response(_id, air_date, episodes, name, overview, id, poster_path, season_number, vote_average, )
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("_id"), _id)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("air_date"), air_date)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("episodes"), episodes)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("name"), name)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("overview"), overview)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("id"), id)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("poster_path"), poster_path)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("season_number"), season_number)
        OpenAPI.validate_property(TvSeasonDetails200Response, Symbol("vote_average"), vote_average)
        return new(_id, air_date, episodes, name, overview, id, poster_path, season_number, vote_average, )
    end
end # type TvSeasonDetails200Response

const _property_types_TvSeasonDetails200Response = Dict{Symbol,String}(Symbol("_id")=>"String", Symbol("air_date")=>"String", Symbol("episodes")=>"Vector{TvSeasonDetails200ResponseEpisodesInner}", Symbol("name")=>"String", Symbol("overview")=>"String", Symbol("id")=>"Int64", Symbol("poster_path")=>"String", Symbol("season_number")=>"Int64", Symbol("vote_average")=>"Float64", )
OpenAPI.property_type(::Type{ TvSeasonDetails200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeasonDetails200Response[name]))}

function check_required(o::TvSeasonDetails200Response)
    true
end

function OpenAPI.validate_property(::Type{ TvSeasonDetails200Response }, name::Symbol, val)
end
