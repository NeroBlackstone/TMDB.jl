# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_season_watch_providers_200_response_results_AT

    TvSeasonWatchProviders200ResponseResultsAT(;
        link=nothing,
        flatrate=nothing,
        buy=nothing,
    )

    - link::String
    - flatrate::Vector{TvSeriesWatchProviders200ResponseResultsATFlatrateInner}
    - buy::Vector{MovieWatchProviders200ResponseResultsATBuyInner}
"""
Base.@kwdef mutable struct TvSeasonWatchProviders200ResponseResultsAT <: OpenAPI.APIModel
    link::Union{Nothing, String} = nothing
    flatrate::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesWatchProviders200ResponseResultsATFlatrateInner} }
    buy::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MovieWatchProviders200ResponseResultsATBuyInner} }

    function TvSeasonWatchProviders200ResponseResultsAT(link, flatrate, buy, )
        OpenAPI.validate_property(TvSeasonWatchProviders200ResponseResultsAT, Symbol("link"), link)
        OpenAPI.validate_property(TvSeasonWatchProviders200ResponseResultsAT, Symbol("flatrate"), flatrate)
        OpenAPI.validate_property(TvSeasonWatchProviders200ResponseResultsAT, Symbol("buy"), buy)
        return new(link, flatrate, buy, )
    end
end # type TvSeasonWatchProviders200ResponseResultsAT

const _property_types_TvSeasonWatchProviders200ResponseResultsAT = Dict{Symbol,String}(Symbol("link")=>"String", Symbol("flatrate")=>"Vector{TvSeriesWatchProviders200ResponseResultsATFlatrateInner}", Symbol("buy")=>"Vector{MovieWatchProviders200ResponseResultsATBuyInner}", )
OpenAPI.property_type(::Type{ TvSeasonWatchProviders200ResponseResultsAT }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeasonWatchProviders200ResponseResultsAT[name]))}

function check_required(o::TvSeasonWatchProviders200ResponseResultsAT)
    true
end

function OpenAPI.validate_property(::Type{ TvSeasonWatchProviders200ResponseResultsAT }, name::Symbol, val)
end
