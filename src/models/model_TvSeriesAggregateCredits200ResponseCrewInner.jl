# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_aggregate_credits_200_response_crew_inner

    TvSeriesAggregateCredits200ResponseCrewInner(;
        adult=true,
        gender=0,
        id=0,
        known_for_department=nothing,
        name=nothing,
        original_name=nothing,
        popularity=0,
        profile_path=nothing,
        jobs=nothing,
        department=nothing,
        total_episode_count=0,
    )

    - adult::Bool
    - gender::Int64
    - id::Int64
    - known_for_department::String
    - name::String
    - original_name::String
    - popularity::Float64
    - profile_path::String
    - jobs::Vector{TvSeriesAggregateCredits200ResponseCrewInnerJobsInner}
    - department::String
    - total_episode_count::Int64
"""
Base.@kwdef mutable struct TvSeriesAggregateCredits200ResponseCrewInner <: OpenAPI.APIModel
    adult::Union{Nothing, Bool} = true
    gender::Union{Nothing, Int64} = 0
    id::Union{Nothing, Int64} = 0
    known_for_department::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    original_name::Union{Nothing, String} = nothing
    popularity::Union{Nothing, Float64} = 0
    profile_path::Union{Nothing, String} = nothing
    jobs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesAggregateCredits200ResponseCrewInnerJobsInner} }
    department::Union{Nothing, String} = nothing
    total_episode_count::Union{Nothing, Int64} = 0

    function TvSeriesAggregateCredits200ResponseCrewInner(adult, gender, id, known_for_department, name, original_name, popularity, profile_path, jobs, department, total_episode_count, )
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("adult"), adult)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("gender"), gender)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("id"), id)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("known_for_department"), known_for_department)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("name"), name)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("original_name"), original_name)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("popularity"), popularity)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("profile_path"), profile_path)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("jobs"), jobs)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("department"), department)
        OpenAPI.validate_property(TvSeriesAggregateCredits200ResponseCrewInner, Symbol("total_episode_count"), total_episode_count)
        return new(adult, gender, id, known_for_department, name, original_name, popularity, profile_path, jobs, department, total_episode_count, )
    end
end # type TvSeriesAggregateCredits200ResponseCrewInner

const _property_types_TvSeriesAggregateCredits200ResponseCrewInner = Dict{Symbol,String}(Symbol("adult")=>"Bool", Symbol("gender")=>"Int64", Symbol("id")=>"Int64", Symbol("known_for_department")=>"String", Symbol("name")=>"String", Symbol("original_name")=>"String", Symbol("popularity")=>"Float64", Symbol("profile_path")=>"String", Symbol("jobs")=>"Vector{TvSeriesAggregateCredits200ResponseCrewInnerJobsInner}", Symbol("department")=>"String", Symbol("total_episode_count")=>"Int64", )
OpenAPI.property_type(::Type{ TvSeriesAggregateCredits200ResponseCrewInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesAggregateCredits200ResponseCrewInner[name]))}

function check_required(o::TvSeriesAggregateCredits200ResponseCrewInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesAggregateCredits200ResponseCrewInner }, name::Symbol, val)
end
