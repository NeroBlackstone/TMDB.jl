# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_alternative_titles_200_response_results_inner

    TvSeriesAlternativeTitles200ResponseResultsInner(;
        iso_3166_1=nothing,
        title=nothing,
        type=nothing,
    )

    - iso_3166_1::String
    - title::String
    - type::String
"""
Base.@kwdef mutable struct TvSeriesAlternativeTitles200ResponseResultsInner <: OpenAPI.APIModel
    iso_3166_1::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function TvSeriesAlternativeTitles200ResponseResultsInner(iso_3166_1, title, type, )
        OpenAPI.validate_property(TvSeriesAlternativeTitles200ResponseResultsInner, Symbol("iso_3166_1"), iso_3166_1)
        OpenAPI.validate_property(TvSeriesAlternativeTitles200ResponseResultsInner, Symbol("title"), title)
        OpenAPI.validate_property(TvSeriesAlternativeTitles200ResponseResultsInner, Symbol("type"), type)
        return new(iso_3166_1, title, type, )
    end
end # type TvSeriesAlternativeTitles200ResponseResultsInner

const _property_types_TvSeriesAlternativeTitles200ResponseResultsInner = Dict{Symbol,String}(Symbol("iso_3166_1")=>"String", Symbol("title")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ TvSeriesAlternativeTitles200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesAlternativeTitles200ResponseResultsInner[name]))}

function check_required(o::TvSeriesAlternativeTitles200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesAlternativeTitles200ResponseResultsInner }, name::Symbol, val)
end
