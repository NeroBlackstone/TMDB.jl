# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_changes_200_response_changes_inner

    TvSeriesChanges200ResponseChangesInner(;
        key=nothing,
        items=nothing,
    )

    - key::String
    - items::Vector{TvSeriesChanges200ResponseChangesInnerItemsInner}
"""
Base.@kwdef mutable struct TvSeriesChanges200ResponseChangesInner <: OpenAPI.APIModel
    key::Union{Nothing, String} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesChanges200ResponseChangesInnerItemsInner} }

    function TvSeriesChanges200ResponseChangesInner(key, items, )
        OpenAPI.validate_property(TvSeriesChanges200ResponseChangesInner, Symbol("key"), key)
        OpenAPI.validate_property(TvSeriesChanges200ResponseChangesInner, Symbol("items"), items)
        return new(key, items, )
    end
end # type TvSeriesChanges200ResponseChangesInner

const _property_types_TvSeriesChanges200ResponseChangesInner = Dict{Symbol,String}(Symbol("key")=>"String", Symbol("items")=>"Vector{TvSeriesChanges200ResponseChangesInnerItemsInner}", )
OpenAPI.property_type(::Type{ TvSeriesChanges200ResponseChangesInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesChanges200ResponseChangesInner[name]))}

function check_required(o::TvSeriesChanges200ResponseChangesInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesChanges200ResponseChangesInner }, name::Symbol, val)
end
