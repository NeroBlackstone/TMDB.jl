# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_content_ratings_200_response

    TvSeriesContentRatings200Response(;
        results=nothing,
        id=0,
    )

    - results::Vector{TvSeriesContentRatings200ResponseResultsInner}
    - id::Int64
"""
Base.@kwdef mutable struct TvSeriesContentRatings200Response <: OpenAPI.APIModel
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesContentRatings200ResponseResultsInner} }
    id::Union{Nothing, Int64} = 0

    function TvSeriesContentRatings200Response(results, id, )
        OpenAPI.validate_property(TvSeriesContentRatings200Response, Symbol("results"), results)
        OpenAPI.validate_property(TvSeriesContentRatings200Response, Symbol("id"), id)
        return new(results, id, )
    end
end # type TvSeriesContentRatings200Response

const _property_types_TvSeriesContentRatings200Response = Dict{Symbol,String}(Symbol("results")=>"Vector{TvSeriesContentRatings200ResponseResultsInner}", Symbol("id")=>"Int64", )
OpenAPI.property_type(::Type{ TvSeriesContentRatings200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesContentRatings200Response[name]))}

function check_required(o::TvSeriesContentRatings200Response)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesContentRatings200Response }, name::Symbol, val)
end
