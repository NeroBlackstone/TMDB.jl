# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_content_ratings_200_response_results_inner

    TvSeriesContentRatings200ResponseResultsInner(;
        descriptors=nothing,
        iso_3166_1=nothing,
        rating=nothing,
    )

    - descriptors::Vector{String}
    - iso_3166_1::String
    - rating::String
"""
Base.@kwdef mutable struct TvSeriesContentRatings200ResponseResultsInner <: OpenAPI.APIModel
    descriptors::Union{Nothing, Vector{String}} = nothing
    iso_3166_1::Union{Nothing, String} = nothing
    rating::Union{Nothing, String} = nothing

    function TvSeriesContentRatings200ResponseResultsInner(descriptors, iso_3166_1, rating, )
        OpenAPI.validate_property(TvSeriesContentRatings200ResponseResultsInner, Symbol("descriptors"), descriptors)
        OpenAPI.validate_property(TvSeriesContentRatings200ResponseResultsInner, Symbol("iso_3166_1"), iso_3166_1)
        OpenAPI.validate_property(TvSeriesContentRatings200ResponseResultsInner, Symbol("rating"), rating)
        return new(descriptors, iso_3166_1, rating, )
    end
end # type TvSeriesContentRatings200ResponseResultsInner

const _property_types_TvSeriesContentRatings200ResponseResultsInner = Dict{Symbol,String}(Symbol("descriptors")=>"Vector{String}", Symbol("iso_3166_1")=>"String", Symbol("rating")=>"String", )
OpenAPI.property_type(::Type{ TvSeriesContentRatings200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesContentRatings200ResponseResultsInner[name]))}

function check_required(o::TvSeriesContentRatings200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesContentRatings200ResponseResultsInner }, name::Symbol, val)
end
