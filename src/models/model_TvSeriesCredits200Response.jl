# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_credits_200_response

    TvSeriesCredits200Response(;
        cast=nothing,
        crew=nothing,
        id=0,
    )

    - cast::Vector{TvSeriesCredits200ResponseCastInner}
    - crew::Vector{TvSeriesCredits200ResponseCrewInner}
    - id::Int64
"""
Base.@kwdef mutable struct TvSeriesCredits200Response <: OpenAPI.APIModel
    cast::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesCredits200ResponseCastInner} }
    crew::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{TvSeriesCredits200ResponseCrewInner} }
    id::Union{Nothing, Int64} = 0

    function TvSeriesCredits200Response(cast, crew, id, )
        OpenAPI.validate_property(TvSeriesCredits200Response, Symbol("cast"), cast)
        OpenAPI.validate_property(TvSeriesCredits200Response, Symbol("crew"), crew)
        OpenAPI.validate_property(TvSeriesCredits200Response, Symbol("id"), id)
        return new(cast, crew, id, )
    end
end # type TvSeriesCredits200Response

const _property_types_TvSeriesCredits200Response = Dict{Symbol,String}(Symbol("cast")=>"Vector{TvSeriesCredits200ResponseCastInner}", Symbol("crew")=>"Vector{TvSeriesCredits200ResponseCrewInner}", Symbol("id")=>"Int64", )
OpenAPI.property_type(::Type{ TvSeriesCredits200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesCredits200Response[name]))}

function check_required(o::TvSeriesCredits200Response)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesCredits200Response }, name::Symbol, val)
end
