# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_external_ids_200_response

    TvSeriesExternalIds200Response(;
        id=0,
        imdb_id=nothing,
        freebase_mid=nothing,
        freebase_id=nothing,
        tvdb_id=0,
        tvrage_id=0,
        wikidata_id=nothing,
        facebook_id=nothing,
        instagram_id=nothing,
        twitter_id=nothing,
    )

    - id::Int64
    - imdb_id::String
    - freebase_mid::String
    - freebase_id::String
    - tvdb_id::Int64
    - tvrage_id::Int64
    - wikidata_id::String
    - facebook_id::String
    - instagram_id::String
    - twitter_id::String
"""
Base.@kwdef mutable struct TvSeriesExternalIds200Response <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    imdb_id::Union{Nothing, String} = nothing
    freebase_mid::Union{Nothing, String} = nothing
    freebase_id::Union{Nothing, String} = nothing
    tvdb_id::Union{Nothing, Int64} = 0
    tvrage_id::Union{Nothing, Int64} = 0
    wikidata_id::Union{Nothing, String} = nothing
    facebook_id::Union{Nothing, String} = nothing
    instagram_id::Union{Nothing, String} = nothing
    twitter_id::Union{Nothing, String} = nothing

    function TvSeriesExternalIds200Response(id, imdb_id, freebase_mid, freebase_id, tvdb_id, tvrage_id, wikidata_id, facebook_id, instagram_id, twitter_id, )
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("id"), id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("imdb_id"), imdb_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("freebase_mid"), freebase_mid)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("freebase_id"), freebase_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("tvdb_id"), tvdb_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("tvrage_id"), tvrage_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("wikidata_id"), wikidata_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("facebook_id"), facebook_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("instagram_id"), instagram_id)
        OpenAPI.validate_property(TvSeriesExternalIds200Response, Symbol("twitter_id"), twitter_id)
        return new(id, imdb_id, freebase_mid, freebase_id, tvdb_id, tvrage_id, wikidata_id, facebook_id, instagram_id, twitter_id, )
    end
end # type TvSeriesExternalIds200Response

const _property_types_TvSeriesExternalIds200Response = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("imdb_id")=>"String", Symbol("freebase_mid")=>"String", Symbol("freebase_id")=>"String", Symbol("tvdb_id")=>"Int64", Symbol("tvrage_id")=>"Int64", Symbol("wikidata_id")=>"String", Symbol("facebook_id")=>"String", Symbol("instagram_id")=>"String", Symbol("twitter_id")=>"String", )
OpenAPI.property_type(::Type{ TvSeriesExternalIds200Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesExternalIds200Response[name]))}

function check_required(o::TvSeriesExternalIds200Response)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesExternalIds200Response }, name::Symbol, val)
end
