# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""tv_series_screened_theatrically_200_response_results_inner

    TvSeriesScreenedTheatrically200ResponseResultsInner(;
        id=0,
        episode_number=0,
        season_number=0,
    )

    - id::Int64
    - episode_number::Int64
    - season_number::Int64
"""
Base.@kwdef mutable struct TvSeriesScreenedTheatrically200ResponseResultsInner <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = 0
    episode_number::Union{Nothing, Int64} = 0
    season_number::Union{Nothing, Int64} = 0

    function TvSeriesScreenedTheatrically200ResponseResultsInner(id, episode_number, season_number, )
        OpenAPI.validate_property(TvSeriesScreenedTheatrically200ResponseResultsInner, Symbol("id"), id)
        OpenAPI.validate_property(TvSeriesScreenedTheatrically200ResponseResultsInner, Symbol("episode_number"), episode_number)
        OpenAPI.validate_property(TvSeriesScreenedTheatrically200ResponseResultsInner, Symbol("season_number"), season_number)
        return new(id, episode_number, season_number, )
    end
end # type TvSeriesScreenedTheatrically200ResponseResultsInner

const _property_types_TvSeriesScreenedTheatrically200ResponseResultsInner = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("episode_number")=>"Int64", Symbol("season_number")=>"Int64", )
OpenAPI.property_type(::Type{ TvSeriesScreenedTheatrically200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TvSeriesScreenedTheatrically200ResponseResultsInner[name]))}

function check_required(o::TvSeriesScreenedTheatrically200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ TvSeriesScreenedTheatrically200ResponseResultsInner }, name::Symbol, val)
end
