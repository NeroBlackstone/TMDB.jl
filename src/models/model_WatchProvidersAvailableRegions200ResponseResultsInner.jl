# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""watch_providers_available_regions_200_response_results_inner

    WatchProvidersAvailableRegions200ResponseResultsInner(;
        iso_3166_1=nothing,
        english_name=nothing,
        native_name=nothing,
    )

    - iso_3166_1::String
    - english_name::String
    - native_name::String
"""
Base.@kwdef mutable struct WatchProvidersAvailableRegions200ResponseResultsInner <: OpenAPI.APIModel
    iso_3166_1::Union{Nothing, String} = nothing
    english_name::Union{Nothing, String} = nothing
    native_name::Union{Nothing, String} = nothing

    function WatchProvidersAvailableRegions200ResponseResultsInner(iso_3166_1, english_name, native_name, )
        OpenAPI.validate_property(WatchProvidersAvailableRegions200ResponseResultsInner, Symbol("iso_3166_1"), iso_3166_1)
        OpenAPI.validate_property(WatchProvidersAvailableRegions200ResponseResultsInner, Symbol("english_name"), english_name)
        OpenAPI.validate_property(WatchProvidersAvailableRegions200ResponseResultsInner, Symbol("native_name"), native_name)
        return new(iso_3166_1, english_name, native_name, )
    end
end # type WatchProvidersAvailableRegions200ResponseResultsInner

const _property_types_WatchProvidersAvailableRegions200ResponseResultsInner = Dict{Symbol,String}(Symbol("iso_3166_1")=>"String", Symbol("english_name")=>"String", Symbol("native_name")=>"String", )
OpenAPI.property_type(::Type{ WatchProvidersAvailableRegions200ResponseResultsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WatchProvidersAvailableRegions200ResponseResultsInner[name]))}

function check_required(o::WatchProvidersAvailableRegions200ResponseResultsInner)
    true
end

function OpenAPI.validate_property(::Type{ WatchProvidersAvailableRegions200ResponseResultsInner }, name::Symbol, val)
end
